version: '3.8'

services:
  ai-document-extractor:
    build: .
    ports:
      - "8000:8000"
    volumes:
      # Mount directories for file processing
      - ./documents:/app/input
      - ./output:/app/output
      - ./temp:/tmp/document_processor
    environment:
      - PYTHONUNBUFFERED=1
      - TESSERACT_PREFIX=/usr/bin/tesseract
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["python", "main.py"]

  # Optional: Redis for caching extracted results
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for storing extraction history
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: document_extractor
      POSTGRES_USER: extractor
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Web UI (optional - simple file upload interface)
  web-ui:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./web:/usr/share/nginx/html
    depends_on:
      - ai-document-extractor
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  documents:
  output:
  temp: